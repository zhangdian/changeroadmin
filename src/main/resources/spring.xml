<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.bd17kaka.marketing" />

	<!-- 下面的变量从配置文件里面拿出来 
    -->
     <bean id="propertyPlaceholderConfigurer"   
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations">  
	        <list>  
	            <value>classpath:jdbc.properties</value>  
	            <value>classpath:config.properties</value>  
	        </list>  
	    </property>  
	</bean>

	<!-- 数据源 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="10" />
		<property name="maxWait" value="1000" />
		<property name="testOnBorrow" value="true" />
	</bean>
	
	<bean id="jedis.shardInfo" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${marketing.redis.host}" />
		<constructor-arg index="1" value="${marketing.redis.port}" />
		<property name="password" value="${marketing.redis.password}" />
	</bean>

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<ref bean="jedis.shardInfo" />
			</list>
		</constructor-arg>
	</bean>

	<!-- 数据源 -->
	<bean id="C3P0DataSourceFather" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		abstract="true">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="autoCommitOnClose" value="false" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。Default:0 -->
		<property name="checkoutTimeout" value="10000" />
		<property name="maxStatements" value="0" />
		<!--初始化时获取五个连接，取值应在minPoolSize与maxPoolSize之间。 Default: 5 -->
		<property name="initialPoolSize" value="5" />
		<!-- 最小连接数 -->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="60" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--How long to hang on to excess unused connections after traffic spike -->
		<property name="maxIdleTimeExcessConnections" value="600" />
	</bean>
	<bean id="sendCloudDataSource" parent="C3P0DataSourceFather">
		<property name="jdbcUrl" value="${db.jdbcUrl}" /> 
		<property name="user" value="${db.user}" /> 
		<property name="password" value="${db.password}" />
	</bean>

</beans>